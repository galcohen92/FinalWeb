@model IEnumerable<RecipeSite.Models.ApplicationUser>
@{
    Layout = null;
}           

<aside class="col-lg-3 col-md-4 hidden-sm hidden-xs" style="padding-right:5px;padding-left:0px;">
    <div id="asideContent">

        @* canvas use *@
        <section style="height:50%" id="canvasSection">
            <div>
                <img src="~/Upload/Images/Style/news2.png" style="margin-bottom:10px;width:auto;height:auto"/>

            </div>

            <canvas id="MyCanvas1" onload="init();">
                This browser or document mode doesn't support canvas object
            </canvas>
        </section>
        <section style="height:40%;margin-top:15px">

            <header>
                <label>Popular Users</label>
            </header>
            <ul>
                @foreach (var item in Model)
                {
                    <li>@Html.DisplayFor(modelItem => item.UserName)</li>
                }
            </ul>
        </section>

        @* Facebook like & share but *@
        <section style="height:10%" class="fb-like" data-href="https://www.facebook.com/recipeSiteWeb?ref=aymt_homepage_panel" data-layout="standard" data-action="like" data-show-faces="true" data-share="true"></section>
    </div>
</aside>

<script type="text/javascript">
    var can, ctx, step, steps = 0,
          delay = 50;

    function init() {
        can = document.getElementById("MyCanvas1");
        ctx = can.getContext("2d")  ;
        ctx.fillStyle = "black";
        ctx.font = "10pt Verdana";
       
        ctx.textBaseline = "middle";

        step = 0;
        steps = can.height + 10;
        RunTextUpToDown();
    }

    function RunTextUpToDown() {
        step++;
        ctx.clearRect(0, 0, can.width, can.height);
        ctx.save();
        ctx.translate(can.width, step);
        ctx.textAlign = "left";
        ctx.fillText("NEW!!!",-can.width, 0);
        ctx.fillText("Hot Chocolate Cake Recipe", -can.width, 15);
        ctx.fillText("The Best in Town !!!", -can.width, 30);
      
        ctx.restore();
        if (step == steps)
            step = 0;
        if (step < steps)
            var t = setTimeout('RunTextUpToDown()', delay); //delay = 50
    }
</script>